- cache @question do
  .answer-errors
    = render 'shared/errors', resource: @answer

  h1= "Questions"
  p= @question.title
  p= @question.body

  p Counter
  = render 'counters/counter', resource: @question

  - if @question.files.attached?
    - @question.files.each do |file|
      =content_tag(:div, id: "file-#{file.id}")
        p= link_to file.filename.to_s, url_for(file)
        - if can?(:destroy, @question)
          p= link_to "Delete attachment #{file.filename}", attachment_path(file), method: :delete, remote: true, local: false

  - if !@question.links.empty?
    .links
      p Links:
      ul
        - @question.links.each do |link|
          =content_tag(:div, id: "link-#{link.id}")
            li= link_to link.name, link.url
            - if can?(:destroy, link.linkable)
              p= link_to "Delete link", link_path(link), method: :delete, remote: true, local: false

  p PRIZE FOR ANSWER
  .prizes  
    - if !@question.prize.nil?
      p= @question.prize.user_id
      p= @question.prize.name
      = image_tag @question.prize.image, style: "width: 250px"    

  p Comments
  .comments_question
    = render @question.comments

  = render 'comments/form', commentable: @question


  h1= "Answers"
  .answers
    = render @question.answers.sort_by_best

  h3 Create new answer
  = form_with model: [@question, @answer], class: 'answer-new', local: false do |form| 
    p
      = form.label :text
      = form.text_area :text
    p
      = form.label :files
      = form.file_field :files, multiple: true

    p Links:
    p
      = form.fields_for :links do |link|
        = render 'link_fields', form: link
    p     
      = link_to_add_association 'add link', form, :links, form_name: 'form', partial: 'link_fields'
    = form.submit 'Create Answer' 

  - if can?(:destroy, @question)
    p = link_to 'Delete question', question_path(@question), method: :delete

  - if user_signed_in?
    .subscription
      = render 'subscriptions/subscription', resource: @question
